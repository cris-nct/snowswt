# This is a basic workflow that is manually triggered

name: Setup new version workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'New version'
        # Default value if no value is explicitly provided
        default: '0.0.0'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  SetupNewVersion:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "New version ${{inputs.name}}"
    - name: Send greeting2
      run: echo "New version $token_push, ${{token_push}}"
      env:
        token_push: ${{ secrets.PAT }}
      with: # Set the secret as an input
        token_push: ${{ secrets.PAT }}
    - name: Checkout
      run: git clone https://github.com/crisnct/snowswt.git
    - name: Change version
      run: cd snowswt; mvn versions:set -DnewVersion="${{inputs.name}}"
    - name: Change version complete
      run: cd snowswt; mvn versions:commit
    - name: Git push
      run: |
          git config --global user.email "nelucristian2005@gmail.com"
          git config --global user.password "$token_push"
          git config --global user.name "NCT"
          cd snowswt
          git commit -m "Increased version to ${{inputs.name}}"
          git push https://crisnct:$token_push@github.com/crisnct/snowswt.git
    - name: Create git tag
      run: cd snowswt; git tag ${{inputs.name}}
    - name: Push git tag
      run: cd snowswt; git push origin tag ${{inputs.name}}
